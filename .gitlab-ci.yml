# .gitlab-ci.yml
image: docker:19.03.1

services:
  - docker:19.03.1-dind

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DASH_TEST_IMAGE: $CI_REGISTRY_IMAGE/dash:latest-build
  COLLECTOR_TEST_IMAGE: $CI_REGISTRY_IMAGE/collector:latest-build
  DASH_RELEASE_IMAGE: $CI_REGISTRY_IMAGE/dash:latest
  COLLECTOR_RELEASE_IMAGE: $CI_REGISTRY_IMAGE/collector:latest

stages:
  - build
  - test  
  - release

build-dash:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $DASH_TEST_IMAGE dash/
    - docker push $DASH_TEST_IMAGE
  
build-collector:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $COLLECTOR_TEST_IMAGE collector/
    - docker push $COLLECTOR_TEST_IMAGE

test:
  stage: test
  script:
    - source ./scripts/test.sh

release-images:
  stage: release
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $DASH_TEST_IMAGE
    - docker tag $DASH_TEST_IMAGE $DASH_RELEASE_IMAGE
    - docker push $DASH_RELEASE_IMAGE
    - docker pull $COLLECTOR_TEST_IMAGE
    - docker tag $COLLECTOR_TEST_IMAGE $COLLECTOR_RELEASE_IMAGE
    - docker push $COLLECTOR_RELEASE_IMAGE
  only:
    - master

#deploy:
#  stage: deploy
#  image: dtzar/helm-kubectl
#  environment:
#    name: production
#    url: https://thetrains.co.uk/
#  script:
#    - kubectl config set-cluster k8s --server="${SERVER}"
#    - kubectl config set clusters.k8s.certificate-authority-data ${CERTIFICATE_AUTHORITY_DATA}
#    - kubectl config set-credentials gitlab --token="${USER_TOKEN}"
#    - kubectl config set-context default --cluster=k8s --user=gitlab
#    - kubectl config use-context default
#    - source ./scripts/deploy.sh
#  only:
#    - master