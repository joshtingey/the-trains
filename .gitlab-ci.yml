# .gitlab-ci.yml

stages:
  - static
  - test
  - release
  #- deploy

flake8:
  stage: static
  image: python:latest
  script:
    - pip install -r common/requirements.txt
    - pip install -r dash/requirements.txt
    - pip install -r collector/requirements.txt
    - flake8 --max-line-length=120 ./common/
    - flake8 --max-line-length=120 ./collector/
    - flake8 --max-line-length=120 ./thetrains/
    - flake8 --max-line-length=120 ./test/

pytest:
  stage: test
  image: python:latest
  script:
    - pip install -r common/requirements.txt
    - pip install -r dash/requirements.txt
    - pip install -r collector/requirements.txt
    - export PYTHONPATH=$PYTHONPATH:$(pwd)
    - pytest

release-thetrains:
  stage: release
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    THETRAINS_IMAGE: $CI_REGISTRY_IMAGE/thetrains:latest
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $THETRAINS_IMAGE -f thetrains/Dockerfile .
    - docker push $THETRAINS_IMAGE
  only:
    - master
  
release-collector:
  stage: release
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    COLLECTOR_IMAGE: $CI_REGISTRY_IMAGE/collector:latest
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $COLLECTOR_IMAGE -f collector/Dockerfile .
    - docker push $COLLECTOR_IMAGE
  only:
    - master

#deploy:
#  stage: deploy
#  image: dtzar/helm-kubectl
#  environment:
#    name: production
#    url: https://thetrains.co.uk/
#  script:
#    - echo 'DEPLOYING'
#    - source ./scripts/deploy.sh
#  only:
#    - master